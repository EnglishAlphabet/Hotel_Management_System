import com.itextpdf.kernel.colors.ColorConstants;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.TextAlignment;
import com.itextpdf.layout.properties.UnitValue;

import java.time.LocalDate;

public class pdfTest {


        public static void main(String[] args) {

            try {

                String dest = "/Users/thantzinlin/Desktop/invoice.pdf"; //change file location

                PdfWriter writer = new PdfWriter(dest);
                PdfDocument pdfDoc = new PdfDocument(writer);
                Document document = new Document(pdfDoc);

                document.add(createHeader("Hotel In Tokyo", "Tokyo\nJapan", "hoteltky@gmail.com"));

                String check_out = LocalDate.now().toString();
                document.add(createCustomerDetails("Guest Name: John Doe", "Check-in: 2024-09-10", "Check-out: " +check_out));

                document.add(new Paragraph("\n"));

                document.add(createItemizedTable());

                document.add(createTotalSection(480.00));

                document.add(createFooter("Thank you for staying with us!"));
                document.close();

                System.out.println("Invoice created successfully!");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        public static Paragraph createHeader(String hotelName, String address, String contact) {
            Paragraph header = new Paragraph()
                    .add(hotelName + "\n")
                    .add(address + "\n")
                    .add(contact + "\n")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setBold()
                    .setFontSize(16);
            return header;
        }

        public static Paragraph createCustomerDetails(String guestName, String checkIn, String checkOut) {
            return new Paragraph()
                    .add("Booking ID: K092424"+"\n")
                    .add(guestName + "\n")
                    .add(checkIn + "\n")
                    .add(checkOut + "\n")
                    .setTextAlignment(TextAlignment.LEFT)
                    .setFontSize(12);
        }

        public static Table createItemizedTable() {
            float[] columnWidths = {2, 5, 2, 2};
            Table table = new Table(UnitValue.createPercentArray(columnWidths));
            table.setWidth(UnitValue.createPercentValue(100));

            table.addHeaderCell(createTableHeaderCell("Item Details"));
            table.addHeaderCell(createQtyTableHeaderCell("Qty"));
            table.addHeaderCell(createTableHeaderCell("Unit Price"));
            table.addHeaderCell(createTableHeaderCell("Total"));


            table.addCell("Single Room\n");
            table.addCell("2 nights").setTextAlignment(TextAlignment.RIGHT);
            table.addCell("$200");
            table.addCell("$400");

            table.addCell("Room Service");
            table.addCell("2").setTextAlignment(TextAlignment.RIGHT);
            table.addCell("$0");
            table.addCell("$0");

            table.addCell("Food\n(Cheese Burger)");
            table.addCell("4").setTextAlignment(TextAlignment.RIGHT);
            table.addCell("$20");
            table.addCell("$80");

            return table;
        }

        public static Cell createTableHeaderCell(String text) {
            Cell cell = new Cell().setTextAlignment(TextAlignment.CENTER);
            cell.add(new Paragraph(text).setBold());
            cell.setBackgroundColor(ColorConstants.LIGHT_GRAY);
            return cell;
        }

    public static Cell createQtyTableHeaderCell(String text) {
        Cell cell = new Cell().setTextAlignment(TextAlignment.RIGHT);
        cell.add(new Paragraph(text).setBold());
        cell.setBackgroundColor(ColorConstants.LIGHT_GRAY);
        return cell;
    }

        public static Paragraph createTotalSection(double totalAmount) {
            Paragraph total = new Paragraph()
                    .add("\nTotal: $" + String.format("%.2f", totalAmount) + "\n")
                    .setTextAlignment(TextAlignment.RIGHT)
                    .setBold()
                    .setFontSize(14);
            return total;
        }

        public static Paragraph createFooter(String footerText) {
            return new Paragraph()
                    .add("\n" + footerText)
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(10)
                    .setItalic();
        }
    }

